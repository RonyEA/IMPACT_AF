% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TransitionModel_class.R
\name{TransitionModel}
\alias{TransitionModel}
\title{TransitionModel Class}
\description{
TransitionModel Class

TransitionModel Class
}
\details{
This class encapsulates the functionality for running a Transition model simulation
with patient transitions, initial states, and a customizable transition matrix.


This method sets up the model by:
\itemize{
  \item Loading model configuration from `./inputs/transitions_config.yaml`
  \item Renaming multimorbidity clusters for consistency
  \item Loading and preparing the initial transition matrix
  \item Counting available Monte Carlo (MC) iterations based on input files
  \item Preloading transition probabilities from saved model coefficients
}



This matrix is used to assign initial health states to patients during simulation initialization.
The cumulative sum across health state columns enables probabilistic sampling.



The method:
\itemize{
  \item Loads and filters the cohort for patients aged 65 and over.
  \item Merges the cohort with the initial transition probabilities using age group, sex, and multimorbidity cluster.
  \item Uses a random rank to probabilistically assign each patient to a health state based on cumulative probabilities.
}



This method:
\itemize{
  \item Loads the coefficient estimates and variance-covariance matrix of a transition model.
  \item Uses multivariate normal sampling to generate simulated coefficients for each Monte Carlo iteration.
  \item Applies the coefficients to a design matrix to calculate transition probabilities via softmax.
  \item Assigns contextual variables (e.g., age group, sex, mm_cluster, CurrentEvent).
  \item Saves the resulting simulated probabilities to disk for each Monte Carlo iteration.
}



For each Monte Carlo iteration:
\itemize{
  \item Initializes patient states using the initial transition matrix.
  \item Loads the simulated transition probabilities for that iteration.
  \item Iteratively updates each patient's state for each year based on the current state and transition probabilities.
  \item Uses random sampling to select the next state based on cumulative transition probabilities.
  \item Filters out terminal states (e.g., death) and handles special state corrections.
  \item Writes the simulated life course with transitions to disk for that iteration.
}
}
\examples{

## ------------------------------------------------
## Method `TransitionModel$new`
## ------------------------------------------------

tm <- TransitionModel$new()


## ------------------------------------------------
## Method `TransitionModel$get_cohort`
## ------------------------------------------------

tm <- TransitionModel$new("path/to/config.yaml")
cohort_data <- tm$get_cohort(1)
Load Initial Transition Matrix


## ------------------------------------------------
## Method `TransitionModel$load_init_trans_mat`
## ------------------------------------------------

tm <- TransitionModel$new("path/to/config.yaml")
init_matrix <- tm$load_init_trans_mat()


## ------------------------------------------------
## Method `TransitionModel$initialize_states`
## ------------------------------------------------

tm <- TransitionModel$new("config/transition_config.yaml")
initialized_lifecourse <- tm$initialize_states(1)


## ------------------------------------------------
## Method `TransitionModel$load_transition_probs`
## ------------------------------------------------

tm <- TransitionModel$new("config/transition_config.yaml")
tm$load_transition_probs()


## ------------------------------------------------
## Method `TransitionModel$run_simulation`
## ------------------------------------------------

tm <- TransitionModel$new("config/transition_config.yaml")
tm$run_simulation()

}
\keyword{Cohort}
\keyword{Data}
\keyword{Filter}
\keyword{Initialize}
\keyword{Load}
\keyword{Markov}
\keyword{Patient}
\keyword{Probabilities}
\keyword{Run}
\keyword{Simulate}
\keyword{Simulation}
\keyword{States}
\keyword{Transition}
\keyword{and}
\keyword{internal}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TransitionModel-new}{\code{TransitionModel$new()}}
\item \href{#method-TransitionModel-get_cohort}{\code{TransitionModel$get_cohort()}}
\item \href{#method-TransitionModel-load_init_trans_mat}{\code{TransitionModel$load_init_trans_mat()}}
\item \href{#method-TransitionModel-initialize_states}{\code{TransitionModel$initialize_states()}}
\item \href{#method-TransitionModel-load_transition_probs}{\code{TransitionModel$load_transition_probs()}}
\item \href{#method-TransitionModel-run_simulation}{\code{TransitionModel$run_simulation()}}
\item \href{#method-TransitionModel-run_scenario}{\code{TransitionModel$run_scenario()}}
\item \href{#method-TransitionModel-clone}{\code{TransitionModel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-new}{}}}
\subsection{Method \code{new()}}{
Initializes the TransitionModel by loading configuration settings from a fixed YAML file path,
reading the initial transition matrix, and preparing internal structures needed for
simulating patient transitions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None. Side-effects include populating internal model fields and printing an initialization message.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-get_cohort"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-get_cohort}{}}}
\subsection{Method \code{get_cohort()}}{
Loads the life course data for a specific Monte Carlo iteration and filters the dataset
to include only individuals aged 65 and above. Returns a subset of relevant variables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$get_cohort(mc_counter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mc_counter}}{Integer. The Monte Carlo iteration index used to identify the appropriate lifecourse file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `data.table` with filtered cohort data containing the following columns:
\itemize{
  \item \code{pid} - Patient ID
  \item \code{year} - Simulation year
  \item \code{sex} - Sex of the individual
  \item \code{agegrp} - Age group
  \item \code{mm_cluster} - Multimorbidity cluster ID
  \item \code{af_prvl} - Atrial fibrillation prevalence
}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new("path/to/config.yaml")
cohort_data <- tm$get_cohort(1)
Load Initial Transition Matrix

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-load_init_trans_mat"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-load_init_trans_mat}{}}}
\subsection{Method \code{load_init_trans_mat()}}{
Loads the initial transition probability matrix for each patient subgroup defined by age group,
sex, and multimorbidity cluster. The function reads from a file path defined in the configuration
YAML and computes cumulative probabilities for the transition to each health state.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$load_init_trans_mat()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A `data.table` with cumulative probabilities for initial transitions, indexed by age group,
sex, and multimorbidity cluster.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new("path/to/config.yaml")
init_matrix <- tm$load_init_trans_mat()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-initialize_states"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-initialize_states}{}}}
\subsection{Method \code{initialize_states()}}{
Initializes the health states for patients in the cohort based on random sampling
using probabilities from the initial transition matrix. This is typically the first
step in running a simulation for a given Monte Carlo iteration.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$initialize_states(mc_counter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mc_counter}}{Integer. The Monte Carlo iteration index used to retrieve the relevant
life course file and determine initial states.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `data.table` representing the life course of each patient, now including the initialized `CurrentEvent` state.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new("config/transition_config.yaml")
initialized_lifecourse <- tm$initialize_states(1)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-load_transition_probs"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-load_transition_probs}{}}}
\subsection{Method \code{load_transition_probs()}}{
Simulates transition probabilities between health states using coefficients from
a multinomial logistic regression model. The method uses Monte Carlo sampling
to reflect uncertainty in model parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$load_transition_probs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None. Saves simulated transition probabilities as `.csv` files in the `./outputs/transitions/` directory.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new("config/transition_config.yaml")
tm$load_transition_probs()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-run_simulation"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-run_simulation}{}}}
\subsection{Method \code{run_simulation()}}{
Executes the Markov simulation model for all patients across all defined simulation years
and Monte Carlo iterations. Simulates annual transitions between health states.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$run_simulation()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None. Results are written to `./outputs/lifecourse/transitions/` as compressed `.csv.gz` files.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tm <- TransitionModel$new("config/transition_config.yaml")
tm$run_simulation()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-run_scenario"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-run_scenario}{}}}
\subsection{Method \code{run_scenario()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$run_scenario(prob_changes, scenario_name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransitionModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TransitionModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransitionModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
